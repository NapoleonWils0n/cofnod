#!/usr/bin/env python3 

# import modules
import validate
import sys, re, getopt, os.path, mimetypes
from urllib.parse import unquote

#=================================================#
# sys       = system access to open files
# re        = regular expressions
# getopt    = check script arguments and options
# os.path   = check if first argument is a file
# mimetypes = check if file is a text file
# unquote   = decode urls
#=================================================#

usage = validate.usage
checkurl = validate.checkurl
duration_validated = validate.duration_validated
arg_length = validate.arg_length

#=================================================#
# split url
#=================================================#

def url_split(url_to_split):
    ''' split url
    
    split url on slash or ampersand
    '''
    slash = re.compile(r'^(http|https)://[a-zA-Z0-9:0-9./?=_,@&%-]+\.(m3u8|mkv|mp4|avi|flv)[|]+.*$')
    qmark = re.compile(r'^(http|https)://[a-zA-Z0-9:0-9./?=_,@&%-]+\.(m3u8|mkv|mp4|avi|flv)[?]+([a-zA-Z0-9?&=%*_-]*[^|])+.*$')
    if slash.match(url_to_split):
        print("match |")
    elif qmark.match(url_to_split):
        print("match ?")
    else:
        print("no match")
         

#=================================================#
# main function
#=================================================#

def main(argv):
    ''' main function
    
    check number of arguments passed to script
    '''
#=================================================#
# check number of arguments passed to script
#=================================================#

# if script is run with no arguments display script usage and exit
# if script is run with more than 4 arguments passed to the script
# display script usage and exit

    arg_length(argv)

#=================================================#
# check options and arguments
#=================================================#

# options
# h = help
# i: = url, the : means i requires an argument which would be the url
# t: = time, the : means t requires an argument which would be the time in 00:00:00 format

    try:
        opts, args = getopt.getopt(argv, "hi:t:", ["help", "url", "time"])
    except getopt.GetoptError as err: 
        print(err)  # will print something like "option -x not recognized"
        usage()     # display script usage
        sys.exit(2) # exit

    for opt, arg in opts:
        if opt in ("-h", "--help"):
            # -h or --help = display help
            usage()
            sys.exit()
        elif opt == ("-i") and len(argv) == 2:
            # -i and url or text file - argv length 2, valid options and args
            checkurl(argv[1]) # checkurl function
        elif opt == ("-t") and len(argv) == 2:
            # -t option on its own - invalid
            print("the -t option must be used after the -i option")
            usage()
            sys.exit()
        elif opt in ("-i", "-t") and len(argv) == 4:
            if "-t" in opts[0]:
                # -t option used before -i option - invalid
                print("the -t option must be used after the -i option")
                usage()
                sys.exit()
            else:
                # -i url followed by -t 00:00:00 = valid
                checkurl(argv[1]) # checkurl function
                duration_validated(argv[3])
        else:
            assert False, "unhandled option"


#=================================================#
# check arg length
#=================================================#


        if len(argv) == 2:
            url_decoded = unquote(unquote(checkurl(argv[1])))
            print("2 args")
        elif len(argv) == 4:
            url_decoded = unquote(unquote(checkurl(argv[1])))
            time = duration_validated(argv[3])
            print("4 args")

#=================================================#
# decode url and split
#=================================================#

        url_split(url_decoded)

           
#        url_split = url_decoded.split(r'|')
#        print(url_split)

#url_list = [v.split('=', 1) for v in decoded_url if '=' in v]
#print(url_list)


#=================================================#
# slice off script name from arguments
#=================================================#

if __name__ == "__main__":
    main(sys.argv[1:])
